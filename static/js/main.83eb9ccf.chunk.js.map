{"version":3,"sources":["utils/formulas.js","components/GameTitle.js","utils/constants.js","components/Sky.js","components/Ground.js","components/CannonPipe.js","components/CannonBase.js","components/Bomb.js","components/Score.js","components/SaucerBase.js","components/SaucerTop.js","components/Saucer.js","components/Heart.js","components/StartButton.js","components/Canvas.js","App.js","containers/Game.js","actions/index.js","reducers/randomSaucer.js","reducers/moveBomb.js","reducers/checkCollision.js","reducers/moveObjects.js","reducers/startGame.js","reducers/shoot.js","reducers/index.js","serviceWorker.js","index.js"],"names":["bezierCurve","curve","startPoint","firstControlPoint","secondControlPoint","endPoint","x","y","radToDeg","rad","Math","PI","degToRad","deg","calculateAngle","x1","y1","x2","y2","slope","atan","calculateNextPosition","angle","divisor","tAngle","stepX","cos","stepY","sin","GameTitle","style","fontFamily","fontSize","fill","invasionCurve","protectTheEarthCurve","filter","id","d","xlinkHref","saucersPositions","Sky","width","height","Ground","data-name","stroke","strokeWidth","CannonPipe","props","transform","CannonBase","Bomb","cx","position","cy","rx","ry","Score","score","SaucerBase","SaucerTop","moveVertically","keyframes","Move","styled","g","Saucer","Heart","leftCurve","rightCurve","StartButton","button","textWidth","cursor","onClick","text","textAnchor","Canvas","viewBox","window","innerWidth","lives","i","gameState","heart","push","key","border","preserveAspectRatio","onMouseMove","trackMouse","shoot","dx","dy","stdDeviation","bombs","map","bomb","start","startGame","kills","currentSaucers","saucer","App","resizeTheWindow","onresize","canvas","document","getElementById","innerHeight","canvasMousePosition","this","self","setInterval","moveObjects","e","point","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","calculateCanvasPosition","className","Component","Game","connect","state","dispatch","mousePosition","type","randomSaucer","lastSaucer","Date","getTime","length","randomSaucerPosition","floor","random","createdAt","moveBombs","checkCollisions","saucers","detected","forEach","time","a","b","checkCollision","bombId","saucerId","action","newState","penalty","detectedBombs","obj","detectedSaucers","indexOf","initialGameState","initialState","reducer","Boolean","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83eb9ccf.chunk.js","sourcesContent":["export const bezierCurve = curve => {\r\n  const { startPoint, firstControlPoint, secondControlPoint, endPoint } = curve;\r\n  return `M ${startPoint.x} ${startPoint.y} c ${firstControlPoint.x} ${firstControlPoint.y} ${secondControlPoint.x} ${secondControlPoint.y} ${endPoint.x} ${endPoint.y}`;\r\n};\r\n\r\nexport const radToDeg = rad => (rad * 180) / Math.PI;\r\nexport const degToRad = deg => (deg * Math.PI) / 180;\r\nexport const calculateAngle = (x1, y1, x2, y2) => {\r\n  if (x2 >= 0 && y2 >= 0) return 90;\r\n  else if (x2 < 0 && y2 >= 0) return -90;\r\n\r\n  const slope = (x2 - x1) / (y2 - y1);\r\n  return -1 * radToDeg(Math.atan(slope));\r\n};\r\n\r\nexport const calculateCanvasPosition = e => {\r\n  const canvas = document.getElementById(\"game-canvas\");\r\n  const point = canvas.createSVGPoint();\r\n  point.x = e.clientX;\r\n  point.y = e.clientY;\r\n  const { x, y } = point.matrixTransform(canvas.getScreenCTM().inverse());\r\n  return { x, y };\r\n};\r\n\r\nexport const calculateNextPosition = (x, y, angle, divisor = 300) => {\r\n  const tAngle = -1 * angle + 90;\r\n  const stepX = radToDeg(Math.cos(degToRad(tAngle))) / divisor;\r\n  const stepY = radToDeg(Math.sin(degToRad(tAngle))) / divisor;\r\n  return {\r\n    x: x + stepX,\r\n    y: y - stepY\r\n  };\r\n};\r\n\r\nexport const checkCollision = (a, b) => {\r\n  return a.x1 < b.x2 && a.x2 > b.x1 && a.y1 < b.y2 && a.y2 > b.y1;\r\n};\r\n","import React from \"react\";\r\nimport { bezierCurve } from \"./../utils/formulas\";\r\n\r\nconst GameTitle = () => {\r\n  const style = {\r\n    fontFamily: '\"Droid Sans\", cursive',\r\n    fontSize: 80,\r\n    fill: \"#cbca62\"\r\n  };\r\n  const invasionCurve = {\r\n    startPoint: {\r\n      x: -190,\r\n      y: -950\r\n    },\r\n    firstControlPoint: {\r\n      x: 95,\r\n      y: -50\r\n    },\r\n    secondControlPoint: {\r\n      x: 285,\r\n      y: -50\r\n    },\r\n    endPoint: {\r\n      x: 380,\r\n      y: 0\r\n    }\r\n  };\r\n  const protectTheEarthCurve = {\r\n    ...invasionCurve,\r\n    startPoint: {\r\n      x: -250,\r\n      y: -780\r\n    },\r\n    firstControlPoint: {\r\n      x: 125,\r\n      y: -90\r\n    },\r\n    secondControlPoint: {\r\n      x: 375,\r\n      y: -90\r\n    },\r\n    endPoint: {\r\n      x: 500,\r\n      y: 0\r\n    }\r\n  };\r\n  return (\r\n    <g filter=\"url(#shadow)\">\r\n      <defs>\r\n        <path id=\"InvasionCurve\" d={bezierCurve(invasionCurve)} />\r\n        <path id=\"ProtectTheEarthCurve\" d={bezierCurve(protectTheEarthCurve)} />\r\n      </defs>\r\n      <text style={style}>\r\n        <textPath xlinkHref=\"#InvasionCurve\">Invasion</textPath>\r\n      </text>\r\n      <text style={style}>\r\n        <textPath xlinkHref=\"#ProtectTheEarthCurve\">Protect Earth!</textPath>\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\nexport default GameTitle;\r\n","export const width = 10000;\r\nexport const textWidth = 800;\r\nexport const waitInterval = 1000;\r\nexport const initialY = -1000;\r\nexport const maxSaucers = 4;\r\nexport const saucersPositions = [-300, -150, 150, 300];\r\n","import React from \"react\";\r\nimport { width } from \"./../utils/constants\";\r\nconst Sky = () => {\r\n  const style = {\r\n    fill: \"#87CEFA\"\r\n  };\r\n  const height = 1200;\r\n  return (\r\n    <rect\r\n      x={width / -2}\r\n      y={100 - height}\r\n      width={width}\r\n      height={height}\r\n      style={style}\r\n    />\r\n  );\r\n};\r\nexport default Sky;\r\n","import React from \"react\";\r\nimport { width } from \"./../utils/constants\";\r\nconst Ground = () => {\r\n  const style = {\r\n    fill: \"#59a941\"\r\n  };\r\n  const height = 100;\r\n  const separator = {\r\n    stroke: \"#458232\",\r\n    strokeWidth: \"3px\"\r\n  };\r\n  return (\r\n    <g id=\"ground\">\r\n      <rect\r\n        id=\"ground-base\"\r\n        data-name=\"ground\"\r\n        x={width / -2}\r\n        y={0}\r\n        width={width}\r\n        height={height}\r\n        style={style}\r\n      />\r\n      <line x1={width / -2} y1={0} x2={width / 2} y2={0} style={separator} />\r\n    </g>\r\n  );\r\n};\r\nexport default Ground;\r\n","import React from \"react\";\r\nimport { bezierCurve } from \"./../utils/formulas\";\r\nimport PropTypes from \"prop-types\";\r\nconst CannonPipe = props => {\r\n  const style = {\r\n    fill: \"#999\",\r\n    stroke: \"#666\",\r\n    strokeWidth: \"2px\"\r\n  };\r\n  const width = 40,\r\n    height = 100;\r\n  const curve = {\r\n    startPoint: {\r\n      x: width / -2,\r\n      y: -0.7 * height\r\n    },\r\n    firstControlPoint: {\r\n      x: -1 * width,\r\n      y: 1.7 * height\r\n    },\r\n    secondControlPoint: {\r\n      x: 2 * width,\r\n      y: 1.7 * height\r\n    },\r\n    endPoint: {\r\n      x: width,\r\n      y: 0\r\n    }\r\n  };\r\n  const transform = `rotate(${props.angle}, 0, 0)`;\r\n  return (\r\n    <g transform={transform}>\r\n      <path d={bezierCurve(curve)} style={style} />\r\n      <line\r\n        x1={width / -2}\r\n        y1={-0.7 * height}\r\n        x2={width / 2}\r\n        y2={-0.7 * height}\r\n        style={style}\r\n      />\r\n    </g>\r\n  );\r\n};\r\nCannonPipe.propTypes = {\r\n  angle: PropTypes.number.isRequired\r\n};\r\nexport default CannonPipe;\r\n","import React from \"react\";\r\nimport { bezierCurve } from \"./../utils/formulas\";\r\n\r\nconst CannonBase = () => {\r\n  const style = {\r\n    fill: \"#a16012\",\r\n    stroke: \"#75450e\",\r\n    strokeWidth: \"2px\"\r\n  };\r\n  const width = 80,\r\n    height = 60;\r\n  const curve = {\r\n    startPoint: {\r\n      x: width / -2,\r\n      y: height\r\n    },\r\n    firstControlPoint: {\r\n      x: width / 4,\r\n      y: -1 * height\r\n    },\r\n    secondControlPoint: {\r\n      x: (width * 3) / 4,\r\n      y: -1 * height\r\n    },\r\n    endPoint: {\r\n      x: width,\r\n      y: 0\r\n    }\r\n  };\r\n  return (\r\n    <g>\r\n      <path d={bezierCurve(curve)} style={style} />\r\n      <line\r\n        x1={width / -2}\r\n        y1={height}\r\n        x2={width / 2}\r\n        y2={height}\r\n        style={style}\r\n      />\r\n    </g>\r\n  );\r\n};\r\nexport default CannonBase;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Bomb = props => {\r\n  const style = {\r\n    fill: \"#777\",\r\n    stroke: \"#444\",\r\n    strokeWidth: \"2px\"\r\n  };\r\n  const radius = 16;\r\n  return (\r\n    <ellipse\r\n      cx={props.position.x}\r\n      cy={props.position.y}\r\n      rx={radius}\r\n      ry={radius}\r\n      style={style}\r\n    />\r\n  );\r\n};\r\nBomb.propTypes = {\r\n  position: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\nexport default Bomb;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Score = props => {\r\n  const style = {\r\n    fontFamily: '\"Droid Sans\", cursive',\r\n    fontSize: 80,\r\n    fill: \"#d6d33e\"\r\n  };\r\n  return (\r\n    <g filter=\"url(#shadow)\">\r\n      <text x=\"300\" y=\"80\" style={style}>\r\n        {props.score}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\nScore.propTypes = {\r\n  score: PropTypes.number.isRequired\r\n};\r\nexport default Score;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SaucerBase = props => {\r\n  const style = {\r\n    fill: \"#979797\",\r\n    stroke: \"#5c5c5c\"\r\n  };\r\n  return (\r\n    <ellipse\r\n      cx={props.position.x}\r\n      cy={props.position.y}\r\n      rx={40}\r\n      ry={10}\r\n      style={style}\r\n    />\r\n  );\r\n};\r\nSaucerBase.propTypes = {\r\n  position: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\nexport default SaucerBase;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bezierCurve } from \"./../utils/formulas\";\r\n\r\nconst SaucerTop = props => {\r\n  const style = {\r\n    fill: \"#b6b6b6\",\r\n    stroke: \"#7d7d7d\"\r\n  };\r\n  const width = 40,\r\n    height = 25;\r\n  const curve = {\r\n    startPoint: {\r\n      x: props.position.x - width / 2,\r\n      y: props.position.y\r\n    },\r\n    firstControlPoint: {\r\n      x: width / 4,\r\n      y: -1 * height\r\n    },\r\n    secondControlPoint: {\r\n      x: (width / 4) * 3,\r\n      y: -1 * height\r\n    },\r\n    endPoint: {\r\n      x: width,\r\n      y: 0\r\n    }\r\n  };\r\n  return <path d={bezierCurve(curve)} style={style} />;\r\n};\r\nSaucerTop.propTypes = {\r\n  position: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\nexport default SaucerTop;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SaucerBase from \"./SaucerBase\";\r\nimport SaucerTop from \"./SaucerTop\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nconst gameHeight = 1200;\r\nconst moveVertically = keyframes`\r\n0% {\r\n  transform: translateY(0);\r\n \r\n}\r\n100% {\r\n  transform: translateY(${gameHeight}px);\r\n}\r\n`;\r\nconst Move = styled.g`\r\n  animation: ${moveVertically} 4s linear;\r\n`;\r\nconst Saucer = props => {\r\n  return (\r\n    <Move>\r\n      <SaucerBase position={props.position} />\r\n      <SaucerTop position={props.position} />\r\n    </Move>\r\n  );\r\n};\r\nSaucer.propTypes = {\r\n  position: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default Saucer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bezierCurve } from \"./../utils/formulas\";\r\n\r\nconst Heart = props => {\r\n  const style = {\r\n    fill: \"#da0d15\",\r\n    stroke: \"#a51708\",\r\n    strokeWidth: \"2px\"\r\n  };\r\n  const leftCurve = {\r\n    startPoint: {\r\n      x: props.position.x,\r\n      y: props.position.y\r\n    },\r\n    firstControlPoint: {\r\n      x: -20,\r\n      y: -20\r\n    },\r\n    secondControlPoint: {\r\n      x: -40,\r\n      y: 10\r\n    },\r\n    endPoint: {\r\n      x: 0,\r\n      y: 40\r\n    }\r\n  };\r\n\r\n  const rightCurve = {\r\n    startPoint: {\r\n      x: props.position.x,\r\n      y: props.position.y\r\n    },\r\n    firstControlPoint: {\r\n      x: 20,\r\n      y: -20\r\n    },\r\n    secondControlPoint: {\r\n      x: 40,\r\n      y: 10\r\n    },\r\n    endPoint: {\r\n      x: 0,\r\n      y: 40\r\n    }\r\n  };\r\n  return (\r\n    <g filter=\"url(#shadow)\">\r\n      <path d={bezierCurve(leftCurve)} style={style} />\r\n      <path d={bezierCurve(rightCurve)} style={style} />\r\n    </g>\r\n  );\r\n};\r\nHeart.propTypes = {\r\n  position: PropTypes.shape({\r\n    x: PropTypes.number.isRequired,\r\n    y: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\nexport default Heart;\r\n","import React from \"react\";\r\nimport { textWidth } from \"./../utils/constants\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StartButton = props => {\r\n  const button = {\r\n    x: textWidth / -2,\r\n    y: -280,\r\n    width: textWidth,\r\n    height: 200,\r\n    rx: 10,\r\n    ry: 10,\r\n    style: {\r\n      fill: \"transparent\",\r\n      cursor: \"pointer\"\r\n    },\r\n    onClick: props.onClick\r\n  };\r\n  const text = {\r\n    textAnchor: \"middle\",\r\n    x: 0,\r\n    y: -150,\r\n    style: {\r\n      fontFamily: '\"Droid Sans\", cursive',\r\n      fontSize: 60,\r\n      fill: \"#e3e3e3\",\r\n      cursor: \"pointer\"\r\n    },\r\n    onClick: props.onClick\r\n  };\r\n  return (\r\n    <g filter=\"url(#shadow\">\r\n      <rect {...button} />\r\n      <text {...text}>Tap To Protect The Earth!</text>\r\n    </g>\r\n  );\r\n};\r\n\r\nStartButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired\r\n};\r\nexport default StartButton;\r\n","import React from \"react\";\r\nimport GameTitle from \"./GameTitle\";\r\nimport Sky from \"./Sky\";\r\nimport Ground from \"./Ground\";\r\nimport CannonPipe from \"./CannonPipe\";\r\nimport CannonBase from \"./CannonBase\";\r\nimport Bomb from \"./Bomb\";\r\nimport Score from \"./Score\";\r\nimport Saucer from \"./Saucer\";\r\nimport Heart from \"./Heart\";\r\nimport StartButton from \"./StartButton\";\r\nimport PropTypes from \"prop-types\";\r\nconst Canvas = props => {\r\n  const style = {\r\n    border: \"1px solid black\"\r\n  };\r\n  const gameHight = 1200;\r\n  const viewBox = [\r\n    window.innerWidth / -2,\r\n    100 - gameHight,\r\n    window.innerWidth,\r\n    gameHight\r\n  ];\r\n  const lives = [];\r\n  for (let i = 0; i < props.gameState.lives; i++) {\r\n    const heart = {\r\n      x: -180 - i * 70,\r\n      y: 35\r\n    };\r\n    lives.push(<Heart position={heart} key={i} />);\r\n  }\r\n  return (\r\n    <svg\r\n      style={style}\r\n      preserveAspectRatio=\"xMaxYMax none\"\r\n      viewBox={viewBox}\r\n      onMouseMove={props.trackMouse}\r\n      onClick={props.shoot}\r\n      id=\"game-canvas\"\r\n    >\r\n      <defs>\r\n        <filter id=\"shadow\">\r\n          <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\" />\r\n        </filter>\r\n      </defs>\r\n      <Sky />\r\n      <Ground />\r\n      {props.gameState.bombs.map(bomb => (\r\n        <Bomb key={bomb.id} position={bomb.position} />\r\n      ))}\r\n      <CannonPipe angle={props.angle} />\r\n      <CannonBase />\r\n      {!props.gameState.start && (\r\n        <g>\r\n          <StartButton onClick={() => props.startGame()} />\r\n          <GameTitle />\r\n        </g>\r\n      )}\r\n      <Score score={props.gameState.kills} />\r\n      {props.gameState.currentSaucers.map(saucer => (\r\n        <Saucer key={saucer.id} position={saucer.position} />\r\n      ))}\r\n      {lives}\r\n    </svg>\r\n  );\r\n};\r\nCanvas.propTypes = {\r\n  angle: PropTypes.number.isRequired,\r\n  trackMouse: PropTypes.func.isRequired,\r\n  startGame: PropTypes.func.isRequired,\r\n  gameState: PropTypes.shape({\r\n    start: PropTypes.bool.isRequired,\r\n    kills: PropTypes.number.isRequired,\r\n    lives: PropTypes.number.isRequired,\r\n    currentSaucers: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        position: PropTypes.shape({\r\n          x: PropTypes.number.isRequired,\r\n          y: PropTypes.number.isRequired\r\n        }).isRequired,\r\n        id: PropTypes.number.isRequired\r\n      })\r\n    ).isRequired\r\n  }).isRequired,\r\n  shoot: PropTypes.func.isRequired\r\n};\r\nexport default Canvas;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Canvas from \"./components/Canvas\";\nimport { calculateCanvasPosition } from \"./utils/formulas\";\nclass App extends Component {\n  componentDidMount() {\n    this.resizeTheWindow();\n    const self = this;\n    setInterval(() => {\n      self.props.moveObjects(self.canvasMousePosition);\n    }, 10);\n  }\n  resizeTheWindow = () => {\n    window.onresize = () => {\n      const canvas = document.getElementById(\"game-canvas\");\n      canvas.style.width = `${window.innerWidth}px`;\n      canvas.style.height = `${window.innerHeight}px`;\n    };\n    window.onresize();\n  };\n  trackMouse(e) {\n    this.canvasMousePosition = calculateCanvasPosition(e);\n  }\n  shoot = () => {\n    this.props.shoot(this.canvasMousePosition);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Canvas\n          angle={this.props.angle}\n          startGame={this.props.startGame}\n          gameState={this.props.gameState}\n          trackMouse={e => {\n            this.trackMouse(e);\n          }}\n          shoot={this.shoot}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  angle: PropTypes.number.isRequired,\n  moveObjects: PropTypes.func.isRequired,\n  startGame: PropTypes.func.isRequired,\n  gameState: PropTypes.shape({\n    start: PropTypes.bool.isRequired,\n    kills: PropTypes.number.isRequired,\n    lives: PropTypes.number.isRequired,\n    currentSaucers: PropTypes.arrayOf(\n      PropTypes.shape({\n        position: PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired\n        }).isRequired,\n        id: PropTypes.number.isRequired\n      })\n    ).isRequired\n  }).isRequired,\n  shoot: PropTypes.func.isRequired\n};\nexport default App;\n","import { connect } from \"react-redux\";\r\nimport App from \"./../App\";\r\nimport { moveObjects, startGame, shoot } from \"./../actions/index\";\r\n\r\nconst mapStateToProps = state => ({\r\n  angle: state.angle,\r\n  gameState: state.gameState\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  moveObjects: mousePosition => dispatch(moveObjects(mousePosition)),\r\n  startGame: () => {\r\n    dispatch(startGame());\r\n  },\r\n  shoot: mousePosition => dispatch(shoot(mousePosition))\r\n});\r\nconst Game = connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default Game;\r\n","export const MOVE_OBJECTS = \"MOVE_OBJECTS\";\r\nexport const moveObjects = mousePosition => ({\r\n  type: MOVE_OBJECTS,\r\n  mousePosition\r\n});\r\n\r\nexport const START_GAME = \"START_GAME\";\r\nexport const startGame = () => ({\r\n  type: START_GAME\r\n});\r\n\r\nexport const SHOOT = \"SHOOT\";\r\nexport const shoot = mousePosition => ({\r\n  type: SHOOT,\r\n  mousePosition\r\n});\r\n","import {\r\n  waitInterval,\r\n  saucersPositions,\r\n  initialY,\r\n  maxSaucers\r\n} from \"./../utils/constants\";\r\nfunction randomSaucer(state) {\r\n  if (!state.gameState.start) return state;\r\n\r\n  const { lastSaucer, currentSaucers } = state.gameState,\r\n    time = new Date().getTime();\r\n  const newSaucer =\r\n    time - lastSaucer.getTime() > waitInterval &&\r\n    currentSaucers.length < maxSaucers;\r\n  if (!newSaucer) return state;\r\n\r\n  const id = new Date().getTime();\r\n  const randomSaucerPosition = Math.floor(Math.random() * maxSaucers);\r\n  const saucerPosition = saucersPositions[randomSaucerPosition];\r\n  const saucer = {\r\n    position: {\r\n      x: saucerPosition,\r\n      y: initialY\r\n    },\r\n    createdAt: new Date().getTime(),\r\n    id\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    gameState: {\r\n      ...state.gameState,\r\n      currentSaucers: [...state.gameState.currentSaucers, saucer],\r\n      lastSaucer: new Date()\r\n    }\r\n  };\r\n}\r\nexport default randomSaucer;\r\n","import { calculateNextPosition } from \"./../utils/formulas\";\r\n\r\nconst moveBombs = bombs =>\r\n  bombs\r\n    .filter(\r\n      bomb =>\r\n        bomb.position.y > -800 &&\r\n        bomb.position.x > -500 &&\r\n        bomb.position.x < 500\r\n    )\r\n    .map(bomb => {\r\n      const { x, y } = bomb.position;\r\n      const { angle } = bomb;\r\n      return {\r\n        ...bomb,\r\n        position: calculateNextPosition(x, y, angle, 5)\r\n      };\r\n    });\r\n\r\nexport default moveBombs;\r\n","import { checkCollision } from \"./../utils/formulas\";\r\nconst gameHeight = 1200;\r\n\r\nconst checkCollisions = (bombs, saucers) => {\r\n  const detected = [];\r\n  saucers.forEach(saucer => {\r\n    const time = new Date().getTime() - saucer.createdAt;\r\n    const position = {\r\n      x: saucer.position.x,\r\n      y: saucer.position.y + (time / 4000) * gameHeight\r\n    };\r\n    const a = {\r\n      x1: position.x - 40,\r\n      y1: position.y - 10,\r\n      x2: position.x + 40,\r\n      y2: position.y + 10\r\n    };\r\n    bombs.forEach(bomb => {\r\n      const b = {\r\n        x1: bomb.position.x - 8,\r\n        y1: bomb.position.y - 8,\r\n        x2: bomb.position.x + 8,\r\n        y2: bomb.position.y + 8\r\n      };\r\n      if (checkCollision(a, b)) {\r\n        detected.push({\r\n          bombId: bomb.id,\r\n          saucerId: saucer.id\r\n        });\r\n      }\r\n    });\r\n  });\r\n  return detected;\r\n};\r\n\r\nexport default checkCollisions;\r\n","import { calculateAngle } from \"./../utils/formulas\";\r\nimport randomSaucer from \"./randomSaucer\";\r\nimport moveBombs from \"./moveBomb\";\r\nimport checkCollisions from \"./checkCollision\";\r\nfunction moveObjects(state, action) {\r\n  if (!state.gameState.start) return state;\r\n\r\n  let bombs = moveBombs(state.gameState.bombs);\r\n  const mousePosition = action.mousePosition || { x: 0, y: 0 };\r\n  const newState = randomSaucer(state);\r\n\r\n  const time = new Date().getTime();\r\n  let currentSaucers = newState.gameState.currentSaucers.filter(\r\n    saucer => time - saucer.createdAt < 4000\r\n  );\r\n\r\n  const penalty =\r\n    currentSaucers.length < newState.gameState.currentSaucers.length;\r\n  let lives = state.gameState.lives;\r\n  if (penalty) lives--;\r\n\r\n  const start = lives > 0;\r\n  if (!start) {\r\n    lives = 3;\r\n    bombs = [];\r\n    currentSaucers = [];\r\n  }\r\n\r\n  const { x, y } = mousePosition;\r\n  const angle = calculateAngle(0, 0, x, y);\r\n\r\n  const detected = checkCollisions(bombs, currentSaucers);\r\n  const detectedBombs = detected.map(obj => obj.bombId);\r\n  const detectedSaucers = detected.map(obj => obj.saucerId);\r\n  currentSaucers = currentSaucers.filter(saucer =>\r\n    detectedSaucers.indexOf(saucer.id)\r\n  );\r\n  bombs = bombs.filter(bomb => detectedBombs.indexOf(bomb.id));\r\n\r\n  const kills = state.gameState.kills + detectedSaucers.length;\r\n  return {\r\n    ...newState,\r\n    gameState: {\r\n      ...newState.gameState,\r\n      currentSaucers: [...currentSaucers],\r\n      bombs: [...bombs],\r\n      start,\r\n      lives,\r\n      kills\r\n    },\r\n    angle\r\n  };\r\n}\r\nexport default moveObjects;\r\n","function startGame(state, initialGameState) {\r\n  return {\r\n    ...state,\r\n    gameState: {\r\n      ...initialGameState,\r\n      start: true\r\n    }\r\n  };\r\n}\r\nexport default startGame;\r\n","import { calculateAngle } from \"./../utils/formulas\";\r\n\r\nfunction shoot(state, action) {\r\n  if (!state.gameState.start) return state;\r\n  const { bombs } = state.gameState;\r\n  if (bombs.length === 2) return state;\r\n\r\n  const { x, y } = action.mousePosition;\r\n  const angle = calculateAngle(0, 0, x, y);\r\n  const id = new Date().getTime();\r\n  const bomb = {\r\n    position: { x: 0, y: 0 },\r\n    angle,\r\n    id\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    gameState: {\r\n      ...state.gameState,\r\n      bombs: [...bombs, bomb]\r\n    }\r\n  };\r\n}\r\n\r\nexport default shoot;\r\n","import moveObjects from \"./moveObjects\";\r\nimport startGame from \"./startGame\";\r\nimport shoot from \"./shoot\";\r\nimport { MOVE_OBJECTS, START_GAME, SHOOT } from \"./../actions/index\";\r\n\r\nconst initialGameState = {\r\n  start: false,\r\n  lives: 3,\r\n  kills: 0,\r\n  currentSaucers: [],\r\n  lastSaucer: new Date(),\r\n  bombs: []\r\n};\r\nconst initialState = {\r\n  angle: 45,\r\n  gameState: initialGameState\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  if (action.type === MOVE_OBJECTS) return moveObjects(state, action);\r\n  else if (action.type === START_GAME)\r\n    return startGame(state, initialGameState);\r\n  else if (action.type === SHOOT) return shoot(state, action);\r\n  else return state;\r\n}\r\n\r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport Game from \"./../src/containers/Game\";\nimport reducer from \"./reducers/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}